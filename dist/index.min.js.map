{"version":3,"file":"index.min.js","sources":["../src/resize.js","../src/move.js","../src/rotate.js"],"sourcesContent":["/* eslint no-unused-vars: \"warn\" */\n\nimport {\n    add as Vadd,\n    dot as Vdot,\n    lenOf as VlenOf,\n    minus as Vminus,\n    ratioOf as VratioOf,\n    rotate as Vrotate,\n    times as Vtimes,\n} from 'vector-math-fp';\n\nimport { approxFix } from 'approx-fix';\n\n// * ---------------------------------------------------------------- auxiliary data 辅助数据\n\n// * ---------------- supported resize mode 支持的计算类型\n\nconst modeChoice = {\n    normal: 'normal',\n    ratio: 'ratio',\n    mirror: 'mirror',\n    mirrorRatio: 'mirrorRatio',\n};\n\nconst md = modeChoice;\n\n// * ---------------- supported trigger marker 支持的交互触发位置\n\nconst markerChoice = {\n    left: 'left',\n    right: 'right',\n    top: 'top',\n    bottom: 'bottom',\n    leftTop: 'leftTop',\n    leftBottom: 'leftBottom',\n    rightTop: 'rightTop',\n    rightBottom: 'rightBottom',\n};\n\nconst mk = markerChoice;\n\n// * ---------------- error message\n\nconst mapKeyStr = obj =>\n    Object.keys(obj)\n        .map(e => `'${e}'`)\n        .join(' | ');\n\nconst modeChoiceErrMsg = `Invalid 'mode' param, it can only be: ${mapKeyStr(modeChoice)}`;\nconst markerChoiceErrMsg = `Invalid 'marker' param, it can only be: ${mapKeyStr(markerChoice)}`;\n\n// * ---------------- nature of mode 计算模式的性质\n\nconst isRatioModeMap = {\n    [md.normal]: false,\n    [md.ratio]: true,\n    [md.mirror]: false,\n    [md.mirrorRatio]: true,\n};\n\nconst isMirrorModeMap = {\n    [md.normal]: false,\n    [md.ratio]: false,\n    [md.mirror]: true,\n    [md.mirrorRatio]: true,\n};\n\n// * ---------------- trigger from edge, filter input by one axis\n// * 边缘触发时 input的轴向过滤器\n\nconst axisX = [1, 0];\nconst axisY = [0, 1];\nconst inputAxisFilter = {\n    [mk.left]: axisX,\n    [mk.right]: axisX,\n    [mk.top]: axisY,\n    [mk.bottom]: axisY,\n};\n\n// * ---------------- inputToSizeFilter 输入到尺寸的映射\n\nconst inputToSizeFilter = (() => {\n    const l = -1;\n    const r = 1;\n    const t = -1;\n    const b = 1;\n\n    return {\n        [mk.left]: [l, 0],\n        [mk.right]: [r, 0],\n        [mk.top]: [0, t],\n        [mk.bottom]: [0, b],\n        [mk.leftTop]: [l, t],\n        [mk.leftBottom]: [l, b],\n        [mk.rightTop]: [r, t],\n        [mk.rightBottom]: [r, b],\n    };\n})();\n\n// * ---------------- diagonal of size which would be used for corner trigger\n// * 角触发计算所需的对角线向量\n\nconst k1 = r => [r, 1];\nconst k2 = r => [r, -1];\n\nconst ratioCornerOperator = {\n    [mk.leftTop]: k1,\n    [mk.leftBottom]: k2,\n    [mk.rightTop]: k2,\n    [mk.rightBottom]: k1,\n};\n\n// * ---------------- lock ratio operator for edge trigger\n// * 边缘触发时候 尺寸锁定比例的算子\n\nconst rx = (r, [x, y]) => [x, x / r];\nconst ry = (r, [x, y]) => [y * r, y];\nconst ratioEdgeOperator = {\n    [mk.left]: rx,\n    [mk.right]: rx,\n    [mk.top]: ry,\n    [mk.bottom]: ry,\n};\n\n// * ---------------------------------------------------------------- resize API\n\nconst resize = ({ startPos, opts = {} }) => {\n    // * ---------------- preparing\n\n    const { center, size, rotate } = startPos;\n    const { startPoint = [0, 0], movePoint = [0, 0], mode = 'normal', marker = null } = opts;\n    const result = {};\n\n    if (!modeChoice[mode]) {\n        throw modeChoiceErrMsg;\n    }\n    if (!markerChoice[marker]) {\n        throw markerChoiceErrMsg;\n    }\n\n    // * ---------------- pre calculation 静态变量预计算\n\n    // * edge trigger, filter the input, 边缘触发 过滤向量\n    const toAxisVector = inputAxisFilter[marker];\n    const isEdgeMarker = toAxisVector !== undefined;\n\n    // * input would map to size, 输入映射到尺寸 过滤向量\n    const toSizeVector = inputToSizeFilter[marker];\n\n    // * diagonal for corner trigger, 锁定和角触发时所需的 对角线向量\n    const diagonalOperator = ratioCornerOperator[marker];\n\n    // * ratiolocker, 尺寸锁定宽高比的算子\n    const ratioLocker = ratioEdgeOperator[marker];\n\n    // * nature of mode, 模式性质\n    const isRatio = isRatioModeMap[mode];\n    const isMirror = isMirrorModeMap[mode];\n\n    // * ---------------- varibles declaration 过程变量声明\n\n    // * ratio, 宽高比\n    const r = VratioOf(size);\n\n    // * inputDelta, would be processed later, 手势输入值（后续会再次处理）\n    const inputDelta = Vminus(startPoint, movePoint);\n    let delta = Vrotate(-rotate, inputDelta);\n\n    let dSize;\n    let dCenter;\n\n    // * -------------------------------- start calculation 开始计算\n\n    if (!isRatio) {\n        if (isEdgeMarker) {\n            delta = Vtimes(toAxisVector, delta);\n        }\n        dSize = Vtimes(toSizeVector, delta);\n    } else if (isEdgeMarker) {\n        delta = Vtimes(toAxisVector, delta);\n\n        dSize = Vtimes(toSizeVector, delta);\n        dSize = ratioLocker(r, dSize);\n    } else {\n        // * project input to diagonal vector, 将输入映射到对角线投影\n        const diagonalVector = diagonalOperator(r);\n        delta = diagonalVector.map(\n            e => (e * Vdot(diagonalVector, delta)) / VlenOf(diagonalVector) ** 2,\n        );\n\n        dSize = Vtimes(toSizeVector, delta);\n    }\n\n    // * ---------------- calc size\n\n    // * if isMirror, delta size show be twice\n    // * 不中心对称模式 size已经计算好\n    // * 中心对称模式 dSize应该是两倍\n    if (isMirror) {\n        dSize = dSize.map(e => e * 2);\n    }\n\n    // * number should always be positive\n    // * (while drag overhead it will be negative)\n    // * 总是为正数（缩放过头会变成负数）\n    result.size = Vadd(size, dSize)\n        .map(Math.abs)\n        .map(approxFix);\n\n    // * ---------------- calc center\n\n    // * if isMirror, center will never change\n    // * 非中心对称模式 center会变\n    // * 中心对称模式 center不会变\n    if (!isMirror) {\n        result.center = Vadd(center, Vrotate(rotate, Vtimes([0.5, 0.5], delta))).map(approxFix);\n    }\n\n    return result;\n};\n\nexport default resize;\n\nexport { resize, markerChoice, modeChoice };\n","import { add, minus } from 'vector-math-fp';\n\nconst move = ({ startPos, opts = {} }) => {\n    const { startPoint = [0, 0], movePoint = [0, 0] } = opts;\n    const { center } = startPos;\n    const result = {};\n\n    result.center = add(center)(minus(startPoint, movePoint));\n\n    return result;\n};\n\nexport default move;\n","import { angleBetween, minus } from 'vector-math-fp';\n\n// TODO feature 旋转的连续性（角度不要突变） // seognil LC 2019/05/08\n// 需要记录多次计算中的movePoint\n// 计算的范围是 (-179, 180] 拖动时保证（ 179 -> 181、-179 -> -181）\n\nconst rotate = ({ startPos, opts = {} }) => {\n    const { startPoint = [0, 0], movePoint = [0, 0] } = opts;\n    // eslint-disable-next-line no-shadow\n    const { center, rotate } = startPos;\n    const result = {};\n\n    result.rotate = rotate + angleBetween(minus(center, startPoint), minus(center, movePoint));\n\n    return result;\n};\n\nexport default rotate;\n"],"names":["modeChoice","normal","ratio","mirror","mirrorRatio","md","markerChoice","left","right","top","bottom","leftTop","leftBottom","rightTop","rightBottom","mk","mapKeyStr","obj","Object","keys","map","e","join","modeChoiceErrMsg","markerChoiceErrMsg","isRatioModeMap","isMirrorModeMap","axisX","axisY","inputAxisFilter","inputToSizeFilter","k1","r","k2","ratioCornerOperator","rx","x","ry","y","ratioEdgeOperator","resize","startPos","opts","center","size","rotate","startPoint","movePoint","mode","marker","result","dSize","toAxisVector","isEdgeMarker","undefined","toSizeVector","diagonalOperator","ratioLocker","isRatio","isMirror","VratioOf","inputDelta","Vminus","delta","Vrotate","Vtimes","diagonalVector","Vdot","VlenOf","Vadd","Math","abs","approxFix","move","add","minus","angleBetween"],"mappings":"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"}